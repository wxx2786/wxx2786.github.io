{"title":"动态规划","date":"2023-10-16T15:39:23.545Z","date_formatted":{"ll":"Oct 16, 2023","L":"10/16/2023","MM-DD":"10-16"},"link":"2023/10/16/动态规划","tags":["algorithm"],"categories":["算法"],"updated":"2023-10-16T15:40:53.043Z","content":"<h1 id=\"01背包\">01背包<a title=\"#01背包\" href=\"#01背包\"></a></h1>\n<h1 id=\"完全背包\">完全背包<a title=\"#完全背包\" href=\"#完全背包\"></a></h1>\n<h3 id=\"完全背包-1\">完全背包<a title=\"#完全背包-1\" href=\"#完全背包-1\"></a></h3>\n<ul>\n<li>\n<p>最直接版完全背包</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> n,m; cin&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) cin&gt;&gt;w[i]&gt;&gt;c[i];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;m;j++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> k=<span class=\"number\">0</span>;k&lt;j/w[i];k++)</span><br><span class=\"line\">\t\t\tdp[j]=<span class=\"built_in\">max</span>(dp[j],dp[j-k*w[i]]+k*c[i]);</span><br><span class=\"line\">cout&lt;&lt;dp[m];</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>优化版二维完全背包</p>\n<p>在完全背包问题中，物品可多项选择，及可以竖向转移—在未添加新物品时该容量下的值(01 背包问题原理)，和竖向转移—在添加新物品的情况加进行动态规划(及在 j-W[i]的背包大小所对应的值加上 C[i]值)，然后取最大值。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> n,m; cin&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) cin&gt;&gt;w[i]&gt;&gt;c[i];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">\t\tdp[i][j]=dp[i<span class=\"number\">-1</span>][j];<span class=\"comment\">//竖向转移</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(j-w[i]&gt;=<span class=\"number\">0</span>)\tdp[i][j]=<span class=\"built_in\">max</span>(dp[i][j],dp[i][j-w[i]]+c[i]);<span class=\"comment\">//横向转移</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cout&lt;&lt;dp[n][m];</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>最简版完全背包问题</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> n,m; cin&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) cin&gt;&gt;w[i]&gt;&gt;c[i];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=w[i];j&lt;=m;j++)&#123;</span><br><span class=\"line\">\t\tdp[j]=<span class=\"built_in\">max</span>(dp[j],dp[j-w[i]]+c[i]);</span><br><span class=\"line\">cout&lt;&lt;dp[m];</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a href=\"https://www.jianshu.com/p/0b9018bbacd7\" target=\"_blank\">背包九讲系列 1——01 背包、完全背包、多重背包 - 简书 (jianshu.com)</a></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#二维数组版</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> w[<span class=\"number\">1024</span>],c[<span class=\"number\">1024</span>]</span><br><span class=\"line\"><span class=\"type\">int</span> n,m;</span><br><span class=\"line\">cin&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) cin&gt;&gt;w[i]&gt;&gt;c[i];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;j&lt;=n;j++)<span class=\"comment\">//i是物品个数</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;j++)<span class=\"comment\">//j是背包空间</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(j&lt;w[i]) dp[i][j]=dp[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">\t\teles dp[i][j]=<span class=\"built_in\">max</span>(dp[i<span class=\"number\">-1</span>][j],dp[i][j-w[i]]+c[i])</span><br><span class=\"line\">cout&lt;&lt;dp[n][m];</span><br><span class=\"line\">#一维数组版</span><br><span class=\"line\"><span class=\"type\">int</span> n,m;cin&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> v,m;cin&gt;&gt;v&gt;&gt;m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=m;j&gt;=v;j--) dp[j]=<span class=\"built_in\">max</span>(dp[j<span class=\"number\">-1</span>],dp[j-v]+m);</span><br><span class=\"line\">&#125;<span class=\"comment\">//从m最大值开始遍历且最小值大于物品体积是为保证能够加入物品</span></span><br><span class=\"line\">cout&lt;&lt;dp[m];</span><br></pre></td></tr></table></figure>\n<ul>\n<li>逐渐添加元素入背包，然后求在每个容量下的最大值(利用动态转移)</li>\n<li>在逐渐增加背包容量下，当容量小于添加元素的体积时，该状态下的最大值 v1 与该容量下未添加元素时的最大值 v2 相同，而在大于添加元素的体积时，该状态需判断添加新元素与剩余空间所对应的值之和 v3 与未添加时的值 v1 的大小，取最大值</li>\n</ul>\n<p><a href=\"https://www.bilibili.com/video/BV1cg411g7Y6/\" target=\"_blank\">带你学透 0-1 背包问题！| 关于背包问题，你不清楚的地方，这里都讲了！| 动态规划经典问题 | 数据结构与算法_哔哩哔哩_bilibili</a></p>\n","prev":{"title":"多线程与多进程","link":"2023/10/20/多线程与多进程"},"next":{"title":"movie_box","link":"2023/10/15/movie_box"},"plink":"https://wxx2786.github.io/2023/10/16/动态规划/","toc":[{"id":"01背包","title":"01背包","index":"1"},{"id":"完全背包","title":"完全背包","index":"2","children":[{"id":"完全背包-1","title":"完全背包","index":"2.1"}]}],"reading_time":"698 words in 5 min"}