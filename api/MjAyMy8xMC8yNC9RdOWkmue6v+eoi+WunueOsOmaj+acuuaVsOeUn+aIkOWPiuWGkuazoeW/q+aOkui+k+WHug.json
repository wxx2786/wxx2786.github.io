{"title":"QT_random_program","date":"2023-10-23T16:31:00.948Z","date_formatted":{"ll":"Oct 24, 2023","L":"10/24/2023","MM-DD":"10-24"},"link":"2023/10/24/Qt多线程实现随机数生成及冒泡快排输出","tags":["QT/thread"],"categories":["QT"],"updated":"2023-10-23T16:33:42.067Z","content":"<h1 id=\"一-为什么使用多线程？\">一 为什么使用多线程？<a title=\"#一-为什么使用多线程？\" href=\"#一-为什么使用多线程？\"></a></h1>\n<p>如果使用单线程即在mainwindows主线程中，会依次从上往下执行程序，则在mainwindows-&gt;show的过程中出现界面未响应和直接输出其中的函数运行结果</p>\n<p>而在使用多线程的情况下，mianwindows主线程持续实现，创建子线程mythread去实现某函数不会影响主线程的运行，即可同时实现mainwindows-&gt;show和mythread的函数实现</p>\n<h1 id=\"二-如何实现多线程？\">二 如何实现多线程？<a title=\"#二-如何实现多线程？\" href=\"#二-如何实现多线程？\"></a></h1>\n<p>创建mythread类并继承qthread类</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Generate::<span class=\"built_in\">Generate</span>(QObject *parent) : <span class=\"built_in\">QThread</span>(parent)&#123;&#125;</span><br></pre></td></tr></table></figure>\n<p>在mainwindows创建子线程对象</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MainWindow::<span class=\"built_in\">MainWindow</span>(QWidget *parent)</span><br><span class=\"line\">    : <span class=\"built_in\">QMainWindow</span>(parent)</span><br><span class=\"line\">    , <span class=\"built_in\">ui</span>(<span class=\"keyword\">new</span> Ui::MainWindow)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ui-&gt;<span class=\"built_in\">setupUi</span>(<span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1. 创建子线程对象</span></span><br><span class=\"line\">    Generate* gen = <span class=\"keyword\">new</span> Generate;</span><br><span class=\"line\">    BubbleSort* bubble = <span class=\"keyword\">new</span> BubbleSort;</span><br><span class=\"line\">    QuickSort* quick = <span class=\"keyword\">new</span> QuickSort;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"三-qt多线程实现随机数生成及冒泡快排输出\">三 Qt多线程实现随机数生成及冒泡快排输出<a title=\"#三-qt多线程实现随机数生成及冒泡快排输出\" href=\"#三-qt多线程实现随机数生成及冒泡快排输出\"></a></h1>\n<p><strong>代码实现:</strong></p>\n<h2 id=\"mainwindows.h\">mainwindows.h<a title=\"#mainwindows.h\" href=\"#mainwindows.h\"></a></h2>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MainWindow</span> : <span class=\"keyword\">public</span> QMainWindow</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Q_OBJECT</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">MainWindow</span>(QWidget *parent = <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">    ~<span class=\"built_in\">MainWindow</span>();</span><br><span class=\"line\">signals:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">starting</span><span class=\"params\">(<span class=\"type\">int</span> num)</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    Ui::MainWindow *ui;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"mythread.h\">mythread.h<a title=\"#mythread.h\" href=\"#mythread.h\"></a></h2>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QThread&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QVector&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">// 生成随机数</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Generate</span> : <span class=\"keyword\">public</span> QThread</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Q_OBJECT</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">explicit</span> <span class=\"title\">Generate</span><span class=\"params\">(QObject *parent = <span class=\"literal\">nullptr</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">recvNum</span><span class=\"params\">(<span class=\"type\">int</span> num)</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">signals:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sendArray</span><span class=\"params\">(QVector&lt;<span class=\"type\">int</span>&gt; num)</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> m_num;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">BubbleSort</span> : <span class=\"keyword\">public</span> QThread</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Q_OBJECT</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">explicit</span> <span class=\"title\">BubbleSort</span><span class=\"params\">(QObject *parent = <span class=\"literal\">nullptr</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">recvArray</span><span class=\"params\">(QVector&lt;<span class=\"type\">int</span>&gt; list)</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">signals:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">finish</span><span class=\"params\">(QVector&lt;<span class=\"type\">int</span>&gt; num)</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    QVector&lt;<span class=\"type\">int</span>&gt; m_list;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">QuickSort</span> : <span class=\"keyword\">public</span> QThread</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Q_OBJECT</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">explicit</span> <span class=\"title\">QuickSort</span><span class=\"params\">(QObject *parent = <span class=\"literal\">nullptr</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">recvArray</span><span class=\"params\">(QVector&lt;<span class=\"type\">int</span>&gt; list)</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">quickSort</span><span class=\"params\">(QVector&lt;<span class=\"type\">int</span>&gt; &amp;list, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span></span>;</span><br><span class=\"line\">signals:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">finish</span><span class=\"params\">(QVector&lt;<span class=\"type\">int</span>&gt; num)</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    QVector&lt;<span class=\"type\">int</span>&gt; m_list;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>附：整体项目已上传github<a href=\"https://github.com/wxx2786/thread_random\" target=\"_blank\">wxx2786/thread_random (github.com)</a></p>\n<p>‍</p>\n","next":{"title":"多生产者多消费者(线程池实现)","link":"2023/10/22/线程池"},"plink":"https://wxx2786.github.io/2023/10/24/Qt多线程实现随机数生成及冒泡快排输出/","toc":[{"id":"一-为什么使用多线程？","title":"一 为什么使用多线程？","index":"1"},{"id":"二-如何实现多线程？","title":"二 如何实现多线程？","index":"2"},{"id":"三-qt多线程实现随机数生成及冒泡快排输出","title":"三 Qt多线程实现随机数生成及冒泡快排输出","index":"3","children":[{"id":"mainwindows.h","title":"mainwindows.h","index":"3.1"},{"id":"mythread.h","title":"mythread.h","index":"3.2"}]}],"reading_time":"417 words in 3 min"}