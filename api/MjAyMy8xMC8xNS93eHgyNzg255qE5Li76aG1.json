{"title":"wxx2786的主页","date":"2023-10-15T11:09:08.360Z","date_formatted":{"ll":"Oct 15, 2023","L":"10/15/2023","MM-DD":"10-15"},"link":"2023/10/15/wxx2786的主页","updated":"2023-10-12T01:01:24.000Z","content":"<h1 id=\"wxx2786的主页\">wxx2786的主页<a title=\"#wxx2786的主页\" href=\"#wxx2786的主页\"></a></h1>\n<h1 id=\"项目经验\">项目经验<a title=\"#项目经验\" href=\"#项目经验\"></a></h1>\n<h2 id=\"python电影票房预测\">python电影票房预测<a title=\"#python电影票房预测\" href=\"#python电影票房预测\"></a></h2>\n<h3 id=\"1.数据获取(spider)\">1.数据获取(spider)<a title=\"#1.数据获取(spider)\" href=\"#1.数据获取(spider)\"></a></h3>\n<p>获取猫眼2018-2024年电影数据</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">from bs4 import BeautifulSoup</span><br><span class=\"line\">import time</span><br><span class=\"line\">import csv</span><br><span class=\"line\"></span><br><span class=\"line\">data=&#123;</span><br><span class=\"line\">    &#x27;user-agent&#x27;:&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.43&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">for year in range(2018, 2024):</span><br><span class=\"line\">    url = f&quot;https://piaofang.maoyan.com/rankings/year?year=&#123;year&#125;&amp;limit=100&amp;tab=&#123;2024 - year&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    with open(f&#x27;&#123;year&#125;数据.csv&#x27;, &#x27;w&#x27;, newline=&#x27;&#x27;, encoding=&#x27;utf-8&#x27;) as csvfile:</span><br><span class=\"line\">        writer = csv.writer(csvfile)</span><br><span class=\"line\">        writer.writerow([&#x27;电影名称&#x27;, &#x27;上映时间&#x27;, &#x27;票房（万元）&#x27;, &#x27;平均票价&#x27;, &#x27;观影人数&#x27;])</span><br><span class=\"line\"></span><br><span class=\"line\">        res=requests.get(url,headers=data)</span><br><span class=\"line\">        time.sleep(2)</span><br><span class=\"line\"></span><br><span class=\"line\">        soup=BeautifulSoup(res.text,&#x27;lxml&#x27;)</span><br><span class=\"line\">        res2=soup.find(&#x27;div&#x27;,id=&quot;ranks-list&quot;)</span><br><span class=\"line\">        list_res2=res2.find_all(&#x27;ul&#x27;,class_=&quot;row&quot;)</span><br><span class=\"line\">        for list in list_res2:</span><br><span class=\"line\">            moviename = list.find(&#x27;p&#x27;,class_=&quot;first-line&quot;).text</span><br><span class=\"line\">            uptime = list.find(&#x27;p&#x27;,class_=&quot;second-line&quot;).text</span><br><span class=\"line\">            boxOffice = list.find(&#x27;li&#x27;,class_=&quot;col2 tr&quot;).text</span><br><span class=\"line\">            aver_price = list.find(&#x27;li&#x27;,class_=&quot;col3 tr&quot;).text</span><br><span class=\"line\">            num_p = list.find(&#x27;li&#x27;,class_=&quot;col4 tr&quot;).text</span><br><span class=\"line\">            writer.writerow([moviename, uptime, boxOffice, aver_price, num_p])</span><br></pre></td></tr></table></figure>\n<h2 id=\"2.数据清洗\">2.数据清洗<a title=\"#2.数据清洗\" href=\"#2.数据清洗\"></a></h2>\n<h3 id=\"a-python\">A-python<a title=\"#a-python\" href=\"#a-python\"></a></h3>\n<p>使用pandas中的dataframe格式存储数据信息并对数据进行清洗</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pandas as pd</span><br><span class=\"line\">data=pd.read_excel(io=&#x27;test.xlsx&#x27;)</span><br><span class=\"line\">data_df=pd.DataFrame(data)</span><br><span class=\"line\">new_data=pd.read_excel(io=&#x27;new_data.xlsx&#x27;)</span><br><span class=\"line\">new_data_df=pd.DataFrame(new_data)</span><br></pre></td></tr></table></figure>\n<h3 id=\"b-sql\">B-sql<a title=\"#b-sql\" href=\"#b-sql\"></a></h3>\n<p>将python爬取的数据使用json文件存储或excel文件存储导入数据库，或使用dbeaver将数据导入mysql中，在dbeaver中执行sql语句对数据进行数据清洗</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#python导入数据到mysql</span><br><span class=\"line\">import mysql.connector</span><br><span class=\"line\">import pandas as pd</span><br><span class=\"line\"></span><br><span class=\"line\">pysql=mysql.connector.connect(user=&#x27;root&#x27;,password=&#x27;123456&#x27;,host=&#x27;localhost&#x27;,database=&#x27;movie_box&#x27;)</span><br><span class=\"line\">#选择数据库 if database is null,create a database</span><br><span class=\"line\">my_cursor=mydb.cursor()</span><br><span class=\"line\">data=pd.dataframe(&#x27;d:/*/&#x27;)</span><br><span class=\"line\">sql=&#x27;insert &#123;****&#125; into talbe&#x27;</span><br><span class=\"line\">my_cursor(sql)#使用游标执行sql语句(增删查改)</span><br></pre></td></tr></table></figure>\n<p>dbeaver</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#在dbeaver创建表映射导入数据</span><br><span class=\"line\">#执行sql语句</span><br><span class=\"line\">use movie_box;#database</span><br><span class=\"line\"> drop if (select *form movie_table)is null form movie_table;</span><br><span class=\"line\"></span><br><span class=\"line\">#去除与电影票房无关的数据，如时间</span><br><span class=\"line\">drop time form movie_table;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据分析\">数据分析<a title=\"#数据分析\" href=\"#数据分析\"></a></h2>\n<p>将与电影票房相关的信息作为特征值使用线性回归对未发行的电影进行票房预测</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from sklearn.linear_model import LinearRegression</span><br><span class=\"line\">import pandas as pd</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">new_movie=[]</span><br><span class=\"line\"></span><br><span class=\"line\">data=pd.read_excel(io=&#x27;test.xlsx&#x27;)</span><br><span class=\"line\">data_df=pd.DataFrame(data)</span><br><span class=\"line\">new_data=pd.read_excel(io=&#x27;new_data.xlsx&#x27;)</span><br><span class=\"line\">new_data_df=pd.DataFrame(new_data)</span><br><span class=\"line\">data_list1=[]</span><br><span class=\"line\">data_list2=[]</span><br><span class=\"line\">new_data_list=[]</span><br><span class=\"line\">new_data_result=[]</span><br><span class=\"line\">for i in range(len(new_data)):</span><br><span class=\"line\">    data=[new_data.iloc[i][&#x27;a&#x27;],new_data.iloc[i][&#x27;d&#x27;],new_data.iloc[i][&#x27;e&#x27;]]#将一个电影的所有特征值作业放到一个列表中作为xi</span><br><span class=\"line\">    #a=地区 b=场次 c=人次</span><br><span class=\"line\">    new_data_list.append(data)#将xi插入到特征值列表中</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#print(new_data_list) </span><br><span class=\"line\">for i in range(31):</span><br><span class=\"line\">    data_=[data_df.loc[i,&#x27;a&#x27;],data_df.loc[i,&#x27;d&#x27;],data_df.loc[i,&#x27;e&#x27;]]#a=地区 b=场次 c=人次</span><br><span class=\"line\">    data_list1.append(data_)</span><br><span class=\"line\">    data_list2.append(data_df.loc[i,&#x27;c&#x27;])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">new_box=[]</span><br><span class=\"line\">def BoxOffice(List_1,List_2,new_list):</span><br><span class=\"line\">    #电影特征值 List1  票房List2</span><br><span class=\"line\">    #new_list 新的预测票房的特征值列表</span><br><span class=\"line\">    model=LinearRegression()</span><br><span class=\"line\">    model.fit(List_1,List_2)</span><br><span class=\"line\">  </span><br><span class=\"line\">    for i in new_list:</span><br><span class=\"line\"></span><br><span class=\"line\">        prediction=model.predict(np.array(i).reshape(1,-1))</span><br><span class=\"line\">        new_box.append(prediction)</span><br><span class=\"line\"></span><br><span class=\"line\"># 在机器学习时，对随机值进行处理后可能会输出负值</span><br><span class=\"line\">#而在发生复制的情况是场次大于人次</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">BoxOffice(data_list1,data_list2,new_data_list)</span><br><span class=\"line\">for i in new_box:</span><br><span class=\"line\">    new_data_result.append(i[0])</span><br><span class=\"line\"></span><br><span class=\"line\">#print(data_df)</span><br><span class=\"line\">#print(new_data_df)</span><br><span class=\"line\">#print(new_data_result)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"数据可视化\">数据可视化<a title=\"#数据可视化\" href=\"#数据可视化\"></a></h2>\n<h3 id=\"1.数据关联图\">1.数据关联图<a title=\"#1.数据关联图\" href=\"#1.数据关联图\"></a></h3>\n<p>部分数据与票房存在相关性，如地区与票房，可使用饼状图将其展示</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pyecharts import options as opts</span><br><span class=\"line\">from pyecharts.charts import Pie</span><br><span class=\"line\">from pyecharts.faker import Faker</span><br><span class=\"line\">predlist_city=[&#x27;江苏&#x27;,&#x27;四川&#x27;,&#x27;天津&#x27;,&#x27;辽宁&#x27;,&#x27;内蒙古&#x27;,&#x27;重庆&#x27;]</span><br><span class=\"line\">list_pred=[]</span><br><span class=\"line\">for i in new_data_result:</span><br><span class=\"line\">    list_pred.append(i)</span><br><span class=\"line\">listdata_pred = [round(x, 2) for x in list_pred]</span><br><span class=\"line\">c = (</span><br><span class=\"line\">    Pie()</span><br><span class=\"line\">    .add(</span><br><span class=\"line\">        &quot;&quot;,</span><br><span class=\"line\">        [list(z) for z in zip(predlist_city, listdata_pred)],</span><br><span class=\"line\">        center=[&quot;35%&quot;, &quot;50%&quot;],</span><br><span class=\"line\">    )</span><br><span class=\"line\">    .set_global_opts(</span><br><span class=\"line\">        title_opts=opts.TitleOpts(title=&quot;2023下半年\\n部分城市票房预测占比图&quot;),</span><br><span class=\"line\">        legend_opts=opts.LegendOpts(pos_left=&quot;15%&quot;),</span><br><span class=\"line\">    )</span><br><span class=\"line\">    .set_series_opts(label_opts=opts.LabelOpts(formatter=&quot;&#123;b&#125;: \\n&#123;c&#125;&quot;))</span><br><span class=\"line\">    .render(&#x27;232.html&#x27;)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>​<img src=\"assets/2023%E4%B8%8B%E5%8D%8A%E5%B9%B4%E9%83%A8%E5%88%86%E5%9F%8E%E5%B8%82%E7%A5%A8%E6%88%BF%E9%A2%84%E6%B5%8B%E5%8D%A0%E6%AF%94%E5%9B%BE-20231011205107-qe51vv8.jpg\" alt=\"2023下半年部分城市票房预测占比图\" loading=\"lazy\">​</p>\n<p>​<img src=\"assets/2011-2023%E6%AF%8F%E6%9C%88%E7%A5%A8%E6%88%BF%E5%8D%A0%E6%AF%94%E7%BB%9F%E8%AE%A1-20231011205133-et8yr7j.jpg\" alt=\"2011-2023每月票房占比统计\" loading=\"lazy\">​</p>\n<pre><code>\t\t\t\t\t\t\t\t\t月度与票房占比\n</code></pre>\n<h3 id=\"2.票房预测图\">2.票房预测图<a title=\"#2.票房预测图\" href=\"#2.票房预测图\"></a></h3>\n<p>将票房预测结构与特征值使用柱状图输出结果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BoxOffice(data_list1,data_list2,new_data)</span><br><span class=\"line\">for i in new_box:</span><br><span class=\"line\">    new_data_result.append(i[0])</span><br><span class=\"line\">#print(df_1)</span><br><span class=\"line\">#print(new_data_result)</span><br><span class=\"line\">toptic_pre=new_data_result[10:20]</span><br><span class=\"line\">pertic_list = [round(x, 2) for x in toptic_pre]</span><br><span class=\"line\">#print(pertic_list)</span><br><span class=\"line\">ticpre=pd.read_csv(r&#x27;排行榜数据-year.csv&#x27;)</span><br><span class=\"line\">tic_datatop=ticpre.iloc[10:20]</span><br><span class=\"line\">tic_data=tic_datatop[&#x27;票房（万元）&#x27;].tolist()</span><br><span class=\"line\">filna_datatop=ticpre.iloc[10:20]</span><br><span class=\"line\">filna_data=filna_datatop[&#x27;电影名称&#x27;].tolist()</span><br><span class=\"line\"></span><br><span class=\"line\">from pyecharts import options as opts</span><br><span class=\"line\">from pyecharts.charts import Bar</span><br><span class=\"line\">from pyecharts.faker import Faker</span><br><span class=\"line\">c = (</span><br><span class=\"line\">    Bar()</span><br><span class=\"line\">    .add_xaxis(filna_data)</span><br><span class=\"line\">    .add_yaxis(&quot;当前票房&quot;, tic_data)</span><br><span class=\"line\">    .add_yaxis(&quot;预测票房&quot;, pertic_list)</span><br><span class=\"line\">    .set_global_opts(title_opts=opts.TitleOpts(title=&quot;2023下半年票房预测&quot;, subtitle=&quot;&quot;))</span><br><span class=\"line\">    .render(&#x27;233.html&#x27;)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>​<img src=\"assets/2023%E4%B8%8B%E5%8D%8A%E5%B9%B4%E7%A5%A8%E6%88%BF%E9%A2%84%E6%B5%8B-20231011205423-mov0f7b.jpg\" alt=\"2023下半年票房预测\" loading=\"lazy\">​</p>\n","prev":{"title":"贪心算法","link":"2023/10/15/贪心算法"},"next":{"title":"wxx_note","link":"2023/10/15/wxx_note"},"plink":"https://wxx2786.github.io/2023/10/15/wxx2786的主页/","copyright":{"author":"wxx2786","link":"<a href=\"https://wxx2786.github.io/2023/10/15/wxx2786的主页/\" title=\"wxx2786的主页\">https://wxx2786.github.io/2023/10/15/wxx2786的主页/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"1284 words in 9 min"}