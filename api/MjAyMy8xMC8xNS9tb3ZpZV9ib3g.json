{"title":"movie_box","date":"2023-10-15T12:08:37.896Z","date_formatted":{"ll":"Oct 15, 2023","L":"10/15/2023","MM-DD":"10-15"},"link":"2023/10/15/movie_box","tags":["python"],"categories":["program"],"updated":"2023-10-16T15:30:29.837Z","content":"<h1 id=\"python电影票房预测\">python电影票房预测<a title=\"#python电影票房预测\" href=\"#python电影票房预测\"></a></h1>\n<h2 id=\"1.数据获取(spider)\">1.数据获取(spider)<a title=\"#1.数据获取(spider)\" href=\"#1.数据获取(spider)\"></a></h2>\n<p>获取猫眼2018-2024年电影数据</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"></span><br><span class=\"line\">data=&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;user-agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.43&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> year <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2018</span>, <span class=\"number\">2024</span>):</span><br><span class=\"line\">    url = <span class=\"string\">f&quot;https://piaofang.maoyan.com/rankings/year?year=<span class=\"subst\">&#123;year&#125;</span>&amp;limit=100&amp;tab=<span class=\"subst\">&#123;<span class=\"number\">2024</span> - year&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;year&#125;</span>数据.csv&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>, newline=<span class=\"string\">&#x27;&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> csvfile:</span><br><span class=\"line\">        writer = csv.writer(csvfile)</span><br><span class=\"line\">        writer.writerow([<span class=\"string\">&#x27;电影名称&#x27;</span>, <span class=\"string\">&#x27;上映时间&#x27;</span>, <span class=\"string\">&#x27;票房（万元）&#x27;</span>, <span class=\"string\">&#x27;平均票价&#x27;</span>, <span class=\"string\">&#x27;观影人数&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">        res=requests.get(url,headers=data)</span><br><span class=\"line\">        time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        soup=BeautifulSoup(res.text,<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">        res2=soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span>=<span class=\"string\">&quot;ranks-list&quot;</span>)</span><br><span class=\"line\">        list_res2=res2.find_all(<span class=\"string\">&#x27;ul&#x27;</span>,class_=<span class=\"string\">&quot;row&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"built_in\">list</span> <span class=\"keyword\">in</span> list_res2:</span><br><span class=\"line\">            moviename = <span class=\"built_in\">list</span>.find(<span class=\"string\">&#x27;p&#x27;</span>,class_=<span class=\"string\">&quot;first-line&quot;</span>).text</span><br><span class=\"line\">            uptime = <span class=\"built_in\">list</span>.find(<span class=\"string\">&#x27;p&#x27;</span>,class_=<span class=\"string\">&quot;second-line&quot;</span>).text</span><br><span class=\"line\">            boxOffice = <span class=\"built_in\">list</span>.find(<span class=\"string\">&#x27;li&#x27;</span>,class_=<span class=\"string\">&quot;col2 tr&quot;</span>).text</span><br><span class=\"line\">            aver_price = <span class=\"built_in\">list</span>.find(<span class=\"string\">&#x27;li&#x27;</span>,class_=<span class=\"string\">&quot;col3 tr&quot;</span>).text</span><br><span class=\"line\">            num_p = <span class=\"built_in\">list</span>.find(<span class=\"string\">&#x27;li&#x27;</span>,class_=<span class=\"string\">&quot;col4 tr&quot;</span>).text</span><br><span class=\"line\">            writer.writerow([moviename, uptime, boxOffice, aver_price, num_p])</span><br></pre></td></tr></table></figure>\n<h2 id=\"2.数据清洗\">2.数据清洗<a title=\"#2.数据清洗\" href=\"#2.数据清洗\"></a></h2>\n<h3 id=\"a-python\">A-python<a title=\"#a-python\" href=\"#a-python\"></a></h3>\n<p>使用pandas中的dataframe格式存储数据信息并对数据进行清洗</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">data=pd.read_excel(io=<span class=\"string\">&#x27;test.xlsx&#x27;</span>)</span><br><span class=\"line\">data_df=pd.DataFrame(data)</span><br><span class=\"line\">new_data=pd.read_excel(io=<span class=\"string\">&#x27;new_data.xlsx&#x27;</span>)</span><br><span class=\"line\">new_data_df=pd.DataFrame(new_data)</span><br></pre></td></tr></table></figure>\n<h3 id=\"b-sql\">B-sql<a title=\"#b-sql\" href=\"#b-sql\"></a></h3>\n<p>将python爬取的数据使用json文件存储或excel文件存储导入数据库，或使用dbeaver将数据导入mysql中，在dbeaver中执行sql语句对数据进行数据清洗</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python导入数据到mysql</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> mysql.connector</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">pysql=mysql.connector.connect(user=<span class=\"string\">&#x27;root&#x27;</span>,password=<span class=\"string\">&#x27;123456&#x27;</span>,host=<span class=\"string\">&#x27;localhost&#x27;</span>,database=<span class=\"string\">&#x27;movie_box&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">#选择数据库 if database is null,create a database</span></span><br><span class=\"line\">my_cursor=mydb.cursor()</span><br><span class=\"line\">data=pd.dataframe(<span class=\"string\">&#x27;d:/*/&#x27;</span>)</span><br><span class=\"line\">sql=<span class=\"string\">&#x27;insert &#123;****&#125; into talbe&#x27;</span></span><br><span class=\"line\">my_cursor(sql)<span class=\"comment\">#使用游标执行sql语句(增删查改)</span></span><br></pre></td></tr></table></figure>\n<p>dbeaver</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#在dbeaver创建表映射导入数据</span></span><br><span class=\"line\"><span class=\"comment\">#执行sql语句</span></span><br><span class=\"line\">use movie_box;<span class=\"comment\">#database</span></span><br><span class=\"line\"> drop <span class=\"keyword\">if</span> (select *form movie_table)<span class=\"keyword\">is</span> null form movie_table;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#去除与电影票房无关的数据，如时间</span></span><br><span class=\"line\">drop time form movie_table;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据分析\">数据分析<a title=\"#数据分析\" href=\"#数据分析\"></a></h2>\n<p>将与电影票房相关的信息作为特征值使用线性回归对未发行的电影进行票房预测</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">new_movie=[]</span><br><span class=\"line\"></span><br><span class=\"line\">data=pd.read_excel(io=<span class=\"string\">&#x27;test.xlsx&#x27;</span>)</span><br><span class=\"line\">data_df=pd.DataFrame(data)</span><br><span class=\"line\">new_data=pd.read_excel(io=<span class=\"string\">&#x27;new_data.xlsx&#x27;</span>)</span><br><span class=\"line\">new_data_df=pd.DataFrame(new_data)</span><br><span class=\"line\">data_list1=[]</span><br><span class=\"line\">data_list2=[]</span><br><span class=\"line\">new_data_list=[]</span><br><span class=\"line\">new_data_result=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(new_data)):</span><br><span class=\"line\">    data=[new_data.iloc[i][<span class=\"string\">&#x27;a&#x27;</span>],new_data.iloc[i][<span class=\"string\">&#x27;d&#x27;</span>],new_data.iloc[i][<span class=\"string\">&#x27;e&#x27;</span>]]<span class=\"comment\">#将一个电影的所有特征值作业放到一个列表中作为xi</span></span><br><span class=\"line\">    <span class=\"comment\">#a=地区 b=场次 c=人次</span></span><br><span class=\"line\">    new_data_list.append(data)<span class=\"comment\">#将xi插入到特征值列表中</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#print(new_data_list) </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">31</span>):</span><br><span class=\"line\">    data_=[data_df.loc[i,<span class=\"string\">&#x27;a&#x27;</span>],data_df.loc[i,<span class=\"string\">&#x27;d&#x27;</span>],data_df.loc[i,<span class=\"string\">&#x27;e&#x27;</span>]]<span class=\"comment\">#a=地区 b=场次 c=人次</span></span><br><span class=\"line\">    data_list1.append(data_)</span><br><span class=\"line\">    data_list2.append(data_df.loc[i,<span class=\"string\">&#x27;c&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">new_box=[]</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">BoxOffice</span>(<span class=\"params\">List_1,List_2,new_list</span>):</span><br><span class=\"line\">    <span class=\"comment\">#电影特征值 List1  票房List2</span></span><br><span class=\"line\">    <span class=\"comment\">#new_list 新的预测票房的特征值列表</span></span><br><span class=\"line\">    model=LinearRegression()</span><br><span class=\"line\">    model.fit(List_1,List_2)</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> new_list:</span><br><span class=\"line\"></span><br><span class=\"line\">        prediction=model.predict(np.array(i).reshape(<span class=\"number\">1</span>,-<span class=\"number\">1</span>))</span><br><span class=\"line\">        new_box.append(prediction)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在机器学习时，对随机值进行处理后可能会输出负值</span></span><br><span class=\"line\"><span class=\"comment\">#而在发生复制的情况是场次大于人次</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">BoxOffice(data_list1,data_list2,new_data_list)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> new_box:</span><br><span class=\"line\">    new_data_result.append(i[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#print(data_df)</span></span><br><span class=\"line\"><span class=\"comment\">#print(new_data_df)</span></span><br><span class=\"line\"><span class=\"comment\">#print(new_data_result)</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"数据可视化\">数据可视化<a title=\"#数据可视化\" href=\"#数据可视化\"></a></h2>\n<h3 id=\"1.数据关联图\">1.数据关联图<a title=\"#1.数据关联图\" href=\"#1.数据关联图\"></a></h3>\n<p>部分数据与票房存在相关性，如地区与票房，可使用饼状图将其展示</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pyecharts <span class=\"keyword\">import</span> options <span class=\"keyword\">as</span> opts</span><br><span class=\"line\"><span class=\"keyword\">from</span> pyecharts.charts <span class=\"keyword\">import</span> Pie</span><br><span class=\"line\"><span class=\"keyword\">from</span> pyecharts.faker <span class=\"keyword\">import</span> Faker</span><br><span class=\"line\">predlist_city=[<span class=\"string\">&#x27;江苏&#x27;</span>,<span class=\"string\">&#x27;四川&#x27;</span>,<span class=\"string\">&#x27;天津&#x27;</span>,<span class=\"string\">&#x27;辽宁&#x27;</span>,<span class=\"string\">&#x27;内蒙古&#x27;</span>,<span class=\"string\">&#x27;重庆&#x27;</span>]</span><br><span class=\"line\">list_pred=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> new_data_result:</span><br><span class=\"line\">    list_pred.append(i)</span><br><span class=\"line\">listdata_pred = [<span class=\"built_in\">round</span>(x, <span class=\"number\">2</span>) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> list_pred]</span><br><span class=\"line\">c = (</span><br><span class=\"line\">    Pie()</span><br><span class=\"line\">    .add(</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">        [<span class=\"built_in\">list</span>(z) <span class=\"keyword\">for</span> z <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(predlist_city, listdata_pred)],</span><br><span class=\"line\">        center=[<span class=\"string\">&quot;35%&quot;</span>, <span class=\"string\">&quot;50%&quot;</span>],</span><br><span class=\"line\">    )</span><br><span class=\"line\">    .set_global_opts(</span><br><span class=\"line\">        title_opts=opts.TitleOpts(title=<span class=\"string\">&quot;2023下半年\\n部分城市票房预测占比图&quot;</span>),</span><br><span class=\"line\">        legend_opts=opts.LegendOpts(pos_left=<span class=\"string\">&quot;15%&quot;</span>),</span><br><span class=\"line\">    )</span><br><span class=\"line\">    .set_series_opts(label_opts=opts.LabelOpts(formatter=<span class=\"string\">&quot;&#123;b&#125;: \\n&#123;c&#125;&quot;</span>))</span><br><span class=\"line\">    .render(<span class=\"string\">&#x27;232.html&#x27;</span>)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>​<img src=\"assets/2023%E4%B8%8B%E5%8D%8A%E5%B9%B4%E9%83%A8%E5%88%86%E5%9F%8E%E5%B8%82%E7%A5%A8%E6%88%BF%E9%A2%84%E6%B5%8B%E5%8D%A0%E6%AF%94%E5%9B%BE-20231011205107-qe51vv8.jpg\" alt=\"2023下半年部分城市票房预测占比图\" loading=\"lazy\">​</p>\n<p>​<img src=\"assets/2011-2023%E6%AF%8F%E6%9C%88%E7%A5%A8%E6%88%BF%E5%8D%A0%E6%AF%94%E7%BB%9F%E8%AE%A1-20231011205133-et8yr7j.jpg\" alt=\"2011-2023每月票房占比统计\" loading=\"lazy\">​</p>\n<pre><code>\t\t\t\t\t\t\t\t\t月度与票房占比\n</code></pre>\n<h3 id=\"2.票房预测图\">2.票房预测图<a title=\"#2.票房预测图\" href=\"#2.票房预测图\"></a></h3>\n<p>将票房预测结构与特征值使用柱状图输出结果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BoxOffice(data_list1,data_list2,new_data)</span><br><span class=\"line\">for i in new_box:</span><br><span class=\"line\">    new_data_result.append(i[0])</span><br><span class=\"line\">#print(df_1)</span><br><span class=\"line\">#print(new_data_result)</span><br><span class=\"line\">toptic_pre=new_data_result[10:20]</span><br><span class=\"line\">pertic_list = [round(x, 2) for x in toptic_pre]</span><br><span class=\"line\">#print(pertic_list)</span><br><span class=\"line\">ticpre=pd.read_csv(r&#x27;排行榜数据-year.csv&#x27;)</span><br><span class=\"line\">tic_datatop=ticpre.iloc[10:20]</span><br><span class=\"line\">tic_data=tic_datatop[&#x27;票房（万元）&#x27;].tolist()</span><br><span class=\"line\">filna_datatop=ticpre.iloc[10:20]</span><br><span class=\"line\">filna_data=filna_datatop[&#x27;电影名称&#x27;].tolist()</span><br><span class=\"line\"></span><br><span class=\"line\">from pyecharts import options as opts</span><br><span class=\"line\">from pyecharts.charts import Bar</span><br><span class=\"line\">from pyecharts.faker import Faker</span><br><span class=\"line\">c = (</span><br><span class=\"line\">    Bar()</span><br><span class=\"line\">    .add_xaxis(filna_data)</span><br><span class=\"line\">    .add_yaxis(&quot;当前票房&quot;, tic_data)</span><br><span class=\"line\">    .add_yaxis(&quot;预测票房&quot;, pertic_list)</span><br><span class=\"line\">    .set_global_opts(title_opts=opts.TitleOpts(title=&quot;2023下半年票房预测&quot;, subtitle=&quot;&quot;))</span><br><span class=\"line\">    .render(&#x27;233.html&#x27;)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>​<img src=\"assets/2023%E4%B8%8B%E5%8D%8A%E5%B9%B4%E7%A5%A8%E6%88%BF%E9%A2%84%E6%B5%8B-20231011205423-mov0f7b.jpg\" alt=\"2023下半年票房预测\" loading=\"lazy\">​</p>\n<p>‍</p>\n","next":{"title":"multivalued dependencies","link":"2023/10/15/multivalued dependencies"},"plink":"https://wxx2786.github.io/2023/10/15/movie_box/","toc":[{"id":"python电影票房预测","title":"python电影票房预测","index":"1","children":[{"id":"1.数据获取(spider)","title":"1.数据获取(spider)","index":"1.1"},{"id":"2.数据清洗","title":"2.数据清洗","index":"1.2","children":[{"id":"a-python","title":"A-python","index":"1.2.1"},{"id":"b-sql","title":"B-sql","index":"1.2.2"}]},{"id":"数据分析","title":"数据分析","index":"1.3"},{"id":"数据可视化","title":"数据可视化","index":"1.4","children":[{"id":"1.数据关联图","title":"1.数据关联图","index":"1.4.1"},{"id":"2.票房预测图","title":"2.票房预测图","index":"1.4.2"}]}]}],"reading_time":"1276 words in 9 min"}